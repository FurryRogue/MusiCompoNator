
==================== FINAL INTERFACE ====================
2019-05-14 04:09:21.74415821 UTC

interface MusiCompoNator-0.1.0.0-E8TyBQY57o81uUM72HIoHR:MusiCompoNator.Core 8042
  interface hash: a3852100d1e1f55d930d5d7812b5ca72
  ABI hash: 0631fb42d0503391855a8d29ed176cfe
  export-list hash: d45b9d07e52ce24e9881247f257e90db
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a2798e994542cfa97404afe7777a8fe9
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  MusiCompoNator.Core.a
  MusiCompoNator.Core.aeolian
  MusiCompoNator.Core.b
  MusiCompoNator.Core.beat
  MusiCompoNator.Core.c
  MusiCompoNator.Core.d
  MusiCompoNator.Core.dorian
  MusiCompoNator.Core.dotted
  MusiCompoNator.Core.down
  MusiCompoNator.Core.duration
  MusiCompoNator.Core.e
  MusiCompoNator.Core.en
  MusiCompoNator.Core.ens
  MusiCompoNator.Core.f
  MusiCompoNator.Core.flat
  MusiCompoNator.Core.g
  MusiCompoNator.Core.hn
  MusiCompoNator.Core.hns
  MusiCompoNator.Core.i
  MusiCompoNator.Core.i'
  MusiCompoNator.Core.i''
  MusiCompoNator.Core.i_
  MusiCompoNator.Core.i__
  MusiCompoNator.Core.ii
  MusiCompoNator.Core.ii'
  MusiCompoNator.Core.ii''
  MusiCompoNator.Core.ii_
  MusiCompoNator.Core.ii__
  MusiCompoNator.Core.iii
  MusiCompoNator.Core.iii'
  MusiCompoNator.Core.iii''
  MusiCompoNator.Core.iii_
  MusiCompoNator.Core.iii__
  MusiCompoNator.Core.iiv
  MusiCompoNator.Core.iiv'
  MusiCompoNator.Core.iiv''
  MusiCompoNator.Core.iiv_
  MusiCompoNator.Core.iiv__
  MusiCompoNator.Core.iix
  MusiCompoNator.Core.iix'
  MusiCompoNator.Core.iix''
  MusiCompoNator.Core.iix_
  MusiCompoNator.Core.iix__
  MusiCompoNator.Core.index
  MusiCompoNator.Core.invertl
  MusiCompoNator.Core.invertr
  MusiCompoNator.Core.ionian
  MusiCompoNator.Core.iv
  MusiCompoNator.Core.iv'
  MusiCompoNator.Core.iv''
  MusiCompoNator.Core.iv_
  MusiCompoNator.Core.iv__
  MusiCompoNator.Core.ix
  MusiCompoNator.Core.ix'
  MusiCompoNator.Core.ix''
  MusiCompoNator.Core.ix_
  MusiCompoNator.Core.ix__
  MusiCompoNator.Core.locrian
  MusiCompoNator.Core.lydian
  MusiCompoNator.Core.mixolydian
  MusiCompoNator.Core.phrygian
  MusiCompoNator.Core.qn
  MusiCompoNator.Core.qns
  MusiCompoNator.Core.root
  MusiCompoNator.Core.sharp
  MusiCompoNator.Core.sn
  MusiCompoNator.Core.sns
  MusiCompoNator.Core.step
  MusiCompoNator.Core.triplet
  MusiCompoNator.Core.tuplet
  MusiCompoNator.Core.up
  MusiCompoNator.Core.v
  MusiCompoNator.Core.v'
  MusiCompoNator.Core.v''
  MusiCompoNator.Core.v_
  MusiCompoNator.Core.v__
  MusiCompoNator.Core.vi
  MusiCompoNator.Core.vi'
  MusiCompoNator.Core.vi''
  MusiCompoNator.Core.vi_
  MusiCompoNator.Core.vi__
  MusiCompoNator.Core.vii
  MusiCompoNator.Core.vii'
  MusiCompoNator.Core.vii''
  MusiCompoNator.Core.vii_
  MusiCompoNator.Core.vii__
  MusiCompoNator.Core.viii
  MusiCompoNator.Core.viii'
  MusiCompoNator.Core.viii''
  MusiCompoNator.Core.viii_
  MusiCompoNator.Core.viii__
  MusiCompoNator.Core.wn
  MusiCompoNator.Core.wns
  MusiCompoNator.Core.x
  MusiCompoNator.Core.x'
  MusiCompoNator.Core.x''
  MusiCompoNator.Core.x_
  MusiCompoNator.Core.x__
  MusiCompoNator.Core.xi
  MusiCompoNator.Core.xi'
  MusiCompoNator.Core.xi''
  MusiCompoNator.Core.xi_
  MusiCompoNator.Core.xi__
  MusiCompoNator.Core.xii
  MusiCompoNator.Core.xii'
  MusiCompoNator.Core.xii''
  MusiCompoNator.Core.xii_
  MusiCompoNator.Core.xii__
  MusiCompoNator.Core.xiii
  MusiCompoNator.Core.xiii'
  MusiCompoNator.Core.xiii''
  MusiCompoNator.Core.xiii_
  MusiCompoNator.Core.xiii__
  MusiCompoNator.Core.Beat
  MusiCompoNator.Core.Measurable{MusiCompoNator.Core.measure MusiCompoNator.Core.signature MusiCompoNator.Core.unmeasure MusiCompoNator.Core.withSignature}
  MusiCompoNator.Core.Pitch
  MusiCompoNator.Core.Rhythm{MusiCompoNator.Core.:-: MusiCompoNator.Core.:|: MusiCompoNator.Core.Measure MusiCompoNator.Core.Repeat}
  MusiCompoNator.Core.Scale
  MusiCompoNator.Core.Sequence
  MusiCompoNator.Core.Signature{MusiCompoNator.Core.Shift MusiCompoNator.Core.Times}
  MusiCompoNator.Core.Simultanity{MusiCompoNator.Core.:=: MusiCompoNator.Core.Silence MusiCompoNator.Core.Sound}
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.Ratio acb0672c59d23785fefce42d4e5a363f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
fixities infixr 3 :-:, infixr 5 :=:, infixr 3 :|:
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity ::
    Data.Foldable.Foldable MusiCompoNator.Core.Simultanity
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ MusiCompoNator.Core.Simultanity
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfold
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldr
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldr'
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldl
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldl'
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldr1
                  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldl1
                  MusiCompoNator.Core.$fFoldableSimultanity_$ctoList
                  MusiCompoNator.Core.$fFoldableSimultanity_$cnull
                  MusiCompoNator.Core.$fFoldableSimultanity_$clength
                  MusiCompoNator.Core.$fFoldableSimultanity8
                    `cast`
                  (forall (a2 :: <*>_N).
                   <GHC.Classes.Eq a2>_R
                   ->_R <a2>_R
                   ->_R <MusiCompoNator.Core.Simultanity a2>_R
                   ->_R Data.Semigroup.Internal.N:Any[0])
                  MusiCompoNator.Core.$fFoldableSimultanity_$cmaximum
                  MusiCompoNator.Core.$fFoldableSimultanity_$cminimum
                  MusiCompoNator.Core.$fFoldableSimultanity5
                    `cast`
                  (forall (a2 :: <*>_N).
                   <GHC.Num.Num a2>_R
                   ->_R <MusiCompoNator.Core.Simultanity a2>_R
                   ->_R Data.Semigroup.Internal.N:Sum[0] <a2>_R)
                  MusiCompoNator.Core.$fFoldableSimultanity1
                    `cast`
                  (forall (a2 :: <*>_N).
                   <GHC.Num.Num a2>_R
                   ->_R <MusiCompoNator.Core.Simultanity a2>_R
                   ->_R Data.Semigroup.Internal.N:Product[0] <a2>_R) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity1 ::
    GHC.Num.Num a =>
    MusiCompoNator.Core.Simultanity a
    -> Data.Semigroup.Internal.Product a
  {- Arity: 1, Strictness: <L,U(A,A,U,A,A,A,C(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 ($dNum :: GHC.Num.Num a2) ->
                 MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                   @ (Data.Semigroup.Internal.Product a2)
                   @ a2
                   (Data.Semigroup.Internal.$fMonoidProduct @ a2 $dNum)
                   (MusiCompoNator.Core.$fFoldableSimultanity2 @ a2)
                     `cast`
                   (<a2>_R ->_R Sym (Data.Semigroup.Internal.N:Product[0] <a2>_R))) -}
4f8d8a5a48028dfdbb227ccd8ba62ef6
  $fFoldableSimultanity10 ::
    a
    -> (GHC.Types.Int -> GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><C(S),1*C1(U(U))><S,1*U(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a2
                   (x2 :: a2)
                   (k :: GHC.Types.Int -> GHC.Types.Int)
                   (z :: GHC.Types.Int) ->
                 case z of wild { GHC.Types.I# x3 ->
                 k (GHC.Types.I# (GHC.Prim.+# x3 1#)) }) -}
e554241a3a08460e2cf040b02184632c
  $fFoldableSimultanity11 :: a -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a2 (ds :: a2) (ds1 :: GHC.Types.Bool) -> GHC.Types.False) -}
857497eaa40600aa793f37f1fae9100b
  $fFoldableSimultanity12 :: a
  {- Strictness: x -}
7f18b43cbc35326bd5db4cd442dd2f21
  $fFoldableSimultanity13 :: a
  {- Strictness: x -}
03471b011121978f4d2360e817643213
  $fFoldableSimultanity2 :: a -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, True) (\ @ a2 (v2 :: a2) -> v2) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity3 ::
    (a -> Data.Semigroup.Internal.Endo GHC.Types.Bool)
    -> MusiCompoNator.Core.Simultanity a
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><S,1*U><L,U> -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity4 ::
    (a
     -> Data.Semigroup.Internal.Endo (GHC.Types.Int -> GHC.Types.Int))
    -> MusiCompoNator.Core.Simultanity a
    -> (GHC.Types.Int -> GHC.Types.Int)
    -> GHC.Types.Int
    -> GHC.Types.Int
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(C1(U))><S,1*U><L,U> -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity5 ::
    GHC.Num.Num a =>
    MusiCompoNator.Core.Simultanity a -> Data.Semigroup.Internal.Sum a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U,A,C(C1(U)),A,A,A,C(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 ($dNum :: GHC.Num.Num a2) ->
                 MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                   @ (Data.Semigroup.Internal.Sum a2)
                   @ a2
                   (Data.Semigroup.Internal.$fMonoidSum @ a2 $dNum)
                   (MusiCompoNator.Core.$fFoldableSimultanity2 @ a2)
                     `cast`
                   (<a2>_R ->_R Sym (Data.Semigroup.Internal.N:Sum[0] <a2>_R))) -}
d809468f4ed87c06bf0993e897078c6c
  $fFoldableSimultanity6 :: a
  {- Strictness: x -}
407272c530e7543e2f4971ae1d192609
  $fFoldableSimultanity7 :: a
  {- Strictness: x -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity8 ::
    GHC.Classes.Eq a =>
    a
    -> MusiCompoNator.Core.Simultanity a -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(1*C1(C(U)),A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 ($dEq :: GHC.Classes.Eq a2) (eta :: a2) ->
                 MusiCompoNator.Core.$fFoldableSimultanity_$s$cfoldMap
                   @ a2
                   (GHC.Classes.== @ a2 $dEq eta)
                     `cast`
                   (<a2>_R ->_R Sym (Data.Semigroup.Internal.N:Any[0]))) -}
c7f2eb795a18b5ef70082f610ebf7e5a
  $fFoldableSimultanity9 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfold ::
    GHC.Base.Monoid m => MusiCompoNator.Core.Simultanity m -> m
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A,A),U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ m ($dMonoid :: GHC.Base.Monoid m) ->
                 MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                   @ m
                   @ m
                   $dMonoid
                   (GHC.Base.id @ m)) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldMap ::
    GHC.Base.Monoid m =>
    (a -> m) -> MusiCompoNator.Core.Simultanity a -> m
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A,A),U,A,A)><L,C(U)><S,1*U> -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldl ::
    (b -> a -> b) -> b -> MusiCompoNator.Core.Simultanity a -> b
  {- Arity: 3, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ b1
                   @ a2
                   (f5 :: b1 -> a2 -> b1)
                   (z :: b1)
                   (t1 :: MusiCompoNator.Core.Simultanity a2) ->
                 (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                    @ (Data.Semigroup.Internal.Dual (Data.Semigroup.Internal.Endo b1))
                    @ a2
                    (MusiCompoNator.Core.$fFoldableSimultanity_$dMonoid @ b1)
                    (\ (x2 :: a2) (y :: b1) -> f5 y x2)
                      `cast`
                    (<a2>_R
                     ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                   (Data.Semigroup.Internal.N:Endo[0] <b1>_R)))
                    t1)
                   `cast`
                 (Data.Semigroup.Internal.N:Dual[0]
                      (Data.Semigroup.Internal.N:Endo[0] <b1>_R))
                   z) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldl' ::
    (b -> a -> b) -> b -> MusiCompoNator.Core.Simultanity a -> b
  {- Arity: 3, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: (\ @ b1
                   @ a2
                   (f5 :: b1 -> a2 -> b1)
                   (z0 :: b1)
                   (xs :: MusiCompoNator.Core.Simultanity a2) ->
                 (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                    @ (Data.Semigroup.Internal.Endo (b1 -> b1))
                    @ a2
                    (Data.Semigroup.Internal.$fMonoidEndo @ (b1 -> b1))
                    (\ (x2 :: a2) (k :: b1 -> b1) (z :: b1) ->
                     case f5 z x2 of vx { DEFAULT -> k vx })
                      `cast`
                    (<a2>_R ->_R Sym (Data.Semigroup.Internal.N:Endo[0] <b1 -> b1>_R))
                    xs)
                   `cast`
                 (Data.Semigroup.Internal.N:Endo[0] <b1 -> b1>_R)
                   (GHC.Base.id @ b1)
                   z0) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldl1 ::
    (a -> a -> a) -> MusiCompoNator.Core.Simultanity a -> a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ a2
                   (f5 :: a2 -> a2 -> a2)
                   (xs :: MusiCompoNator.Core.Simultanity a2) ->
                 case (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                         @ (Data.Semigroup.Internal.Dual
                              (Data.Semigroup.Internal.Endo (GHC.Base.Maybe a2)))
                         @ a2
                         (MusiCompoNator.Core.$fFoldableSimultanity_$dMonoid
                            @ (GHC.Base.Maybe a2))
                         (\ (x2 :: a2) (y :: GHC.Base.Maybe a2) ->
                          GHC.Base.Just
                            @ a2
                            (case y of wild {
                               GHC.Base.Nothing -> x2 GHC.Base.Just x3 -> f5 x3 x2 }))
                           `cast`
                         (<a2>_R
                          ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                        (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a2>_R)))
                         xs)
                        `cast`
                      (Data.Semigroup.Internal.N:Dual[0]
                           (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a2>_R))
                        (GHC.Base.Nothing @ a2) of wild {
                   GHC.Base.Nothing
                   -> MusiCompoNator.Core.$fFoldableSimultanity12 @ a2
                   GHC.Base.Just v2 -> v2 }) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldr ::
    (a -> b -> b) -> b -> MusiCompoNator.Core.Simultanity a -> b
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a2
                   @ b1
                   (f5 :: a2 -> b1 -> b1)
                   (z :: b1)
                   (t1 :: MusiCompoNator.Core.Simultanity a2) ->
                 (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                    @ (Data.Semigroup.Internal.Endo b1)
                    @ a2
                    (Data.Semigroup.Internal.$fMonoidEndo @ b1)
                    f5
                      `cast`
                    (<a2>_R ->_R Sym (Data.Semigroup.Internal.N:Endo[0] <b1>_R))
                    t1)
                   `cast`
                 (Data.Semigroup.Internal.N:Endo[0] <b1>_R)
                   z) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldr' ::
    (a -> b -> b) -> b -> MusiCompoNator.Core.Simultanity a -> b
  {- Arity: 3, Strictness: <L,C(C1(U))><L,U><S,1*U>,
     Unfolding: (\ @ a2
                   @ b1
                   (f5 :: a2 -> b1 -> b1)
                   (z0 :: b1)
                   (xs :: MusiCompoNator.Core.Simultanity a2) ->
                 (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                    @ (Data.Semigroup.Internal.Dual
                         (Data.Semigroup.Internal.Endo (b1 -> b1)))
                    @ a2
                    (MusiCompoNator.Core.$fFoldableSimultanity_$dMonoid @ (b1 -> b1))
                    (\ (x2 :: a2) (y :: b1 -> b1) (z :: b1) ->
                     case f5 x2 z of vx { DEFAULT -> y vx })
                      `cast`
                    (<a2>_R
                     ->_R Sym (Data.Semigroup.Internal.N:Dual[0]
                                   (Data.Semigroup.Internal.N:Endo[0] <b1 -> b1>_R)))
                    xs)
                   `cast`
                 (Data.Semigroup.Internal.N:Dual[0]
                      (Data.Semigroup.Internal.N:Endo[0] <b1 -> b1>_R))
                   (GHC.Base.id @ b1)
                   z0) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cfoldr1 ::
    (a -> a -> a) -> MusiCompoNator.Core.Simultanity a -> a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Unfolding: (\ @ a2
                   (f5 :: a2 -> a2 -> a2)
                   (xs :: MusiCompoNator.Core.Simultanity a2) ->
                 case (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                         @ (Data.Semigroup.Internal.Endo (GHC.Base.Maybe a2))
                         @ a2
                         (Data.Semigroup.Internal.$fMonoidEndo @ (GHC.Base.Maybe a2))
                         (\ (x2 :: a2) (m :: GHC.Base.Maybe a2) ->
                          GHC.Base.Just
                            @ a2
                            (case m of wild {
                               GHC.Base.Nothing -> x2 GHC.Base.Just y -> f5 x2 y }))
                           `cast`
                         (<a2>_R
                          ->_R Sym (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a2>_R))
                         xs)
                        `cast`
                      (Data.Semigroup.Internal.N:Endo[0] <GHC.Base.Maybe a2>_R)
                        (GHC.Base.Nothing @ a2) of wild {
                   GHC.Base.Nothing
                   -> MusiCompoNator.Core.$fFoldableSimultanity13 @ a2
                   GHC.Base.Just v2 -> v2 }) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$clength ::
    MusiCompoNator.Core.Simultanity a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 (xs :: MusiCompoNator.Core.Simultanity a2) ->
                 MusiCompoNator.Core.$fFoldableSimultanity4
                   @ a2
                   (MusiCompoNator.Core.$fFoldableSimultanity10 @ a2)
                     `cast`
                   (<a2>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                  <GHC.Types.Int -> GHC.Types.Int>_R))
                   xs
                   (GHC.Base.id @ GHC.Types.Int)
                   MusiCompoNator.Core.$fFoldableSimultanity9) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cmaximum ::
    GHC.Classes.Ord a => MusiCompoNator.Core.Simultanity a -> a
  {- Arity: 1, Strictness: <L,U(A,A,A,A,A,C(C1(U)),A,A)>,
     Unfolding: (\ @ a2 ($dOrd :: GHC.Classes.Ord a2) ->
                 let {
                   g1 :: GHC.Base.Monoid (Data.Functor.Utils.Max a2)
                   = Data.Functor.Utils.$fMonoidMax @ a2 $dOrd
                 } in
                 \ (x2 :: MusiCompoNator.Core.Simultanity a2) ->
                 case (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                         @ (Data.Functor.Utils.Max a2)
                         @ a2
                         g1
                         (GHC.Base.Just @ a2)
                           `cast`
                         (<a2>_R ->_R Sym (Data.Functor.Utils.N:Max[0]) <a2>_N)
                         x2)
                        `cast`
                      (Data.Functor.Utils.N:Max[0] <a2>_N) of wild {
                   GHC.Base.Nothing -> MusiCompoNator.Core.$fFoldableSimultanity7 @ a2
                   GHC.Base.Just v2 -> v2 }) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cminimum ::
    GHC.Classes.Ord a => MusiCompoNator.Core.Simultanity a -> a
  {- Arity: 1, Strictness: <L,U(A,A,A,C(C1(U)),A,A,A,A)>,
     Unfolding: (\ @ a2 ($dOrd :: GHC.Classes.Ord a2) ->
                 let {
                   g1 :: GHC.Base.Monoid (Data.Functor.Utils.Min a2)
                   = Data.Functor.Utils.$fMonoidMin @ a2 $dOrd
                 } in
                 \ (x2 :: MusiCompoNator.Core.Simultanity a2) ->
                 case (MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap
                         @ (Data.Functor.Utils.Min a2)
                         @ a2
                         g1
                         (GHC.Base.Just @ a2)
                           `cast`
                         (<a2>_R ->_R Sym (Data.Functor.Utils.N:Min[0]) <a2>_N)
                         x2)
                        `cast`
                      (Data.Functor.Utils.N:Min[0] <a2>_N) of wild {
                   GHC.Base.Nothing -> MusiCompoNator.Core.$fFoldableSimultanity6 @ a2
                   GHC.Base.Just v2 -> v2 }) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$cnull ::
    MusiCompoNator.Core.Simultanity a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 (t1 :: MusiCompoNator.Core.Simultanity a2) ->
                 MusiCompoNator.Core.$fFoldableSimultanity3
                   @ a2
                   (MusiCompoNator.Core.$fFoldableSimultanity11 @ a2)
                     `cast`
                   (<a2>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0] <GHC.Types.Bool>_R))
                   t1
                   GHC.Types.True) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$ctoList ::
    MusiCompoNator.Core.Simultanity a -> [a]
  {- Arity: 1, Strictness: <S,1*U>, Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a2 (t1 :: MusiCompoNator.Core.Simultanity a2) ->
                 GHC.Base.build
                   @ a2
                   (\ @ b1 (c1 :: a2 -> b1 -> b1)[OneShot] (n :: b1)[OneShot] ->
                    MusiCompoNator.Core.$fFoldableSimultanity_$cfoldr
                      @ a2
                      @ b1
                      c1
                      n
                      t1)) -}
e3737c6cc7b8b77ad0f5885890c18fe2
  $fFoldableSimultanity_$dMonoid ::
    GHC.Base.Monoid
      (Data.Semigroup.Internal.Dual (Data.Semigroup.Internal.Endo b))
  {- Unfolding: (\ @ b1 ->
                 Data.Semigroup.Internal.$fMonoidDual
                   @ (Data.Semigroup.Internal.Endo b1)
                   (Data.Semigroup.Internal.$fMonoidEndo @ b1)) -}
c69cd7691be18e45cf73b095d65a6770
  $fFoldableSimultanity_$s$cfoldMap ::
    (a -> Data.Semigroup.Internal.Any)
    -> MusiCompoNator.Core.Simultanity a -> Data.Semigroup.Internal.Any
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
d4024a57f0b29f741a974bb072806c84
  $fFunctorRhythm :: GHC.Base.Functor MusiCompoNator.Core.Rhythm
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ MusiCompoNator.Core.Rhythm
                  MusiCompoNator.Core.$fFunctorRhythm_$cfmap
                  MusiCompoNator.Core.$fFunctorRhythm_$c<$ -}
d4024a57f0b29f741a974bb072806c84
  $fFunctorRhythm_$c<$ ::
    a -> MusiCompoNator.Core.Rhythm b -> MusiCompoNator.Core.Rhythm a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 @ b1 (x2 :: a2) (eta :: MusiCompoNator.Core.Rhythm b1) ->
                 MusiCompoNator.Core.$fFunctorRhythm_$cfmap
                   @ b1
                   @ a2
                   (\ (ds :: b1) -> x2)
                   eta) -}
d4024a57f0b29f741a974bb072806c84
  $fFunctorRhythm_$cfmap ::
    (a -> b)
    -> MusiCompoNator.Core.Rhythm a -> MusiCompoNator.Core.Rhythm b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
c69cd7691be18e45cf73b095d65a6770
  $fFunctorSimultanity ::
    GHC.Base.Functor MusiCompoNator.Core.Simultanity
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ MusiCompoNator.Core.Simultanity
                  MusiCompoNator.Core.$fFunctorSimultanity_$cfmap
                  MusiCompoNator.Core.$fFunctorSimultanity_$c<$ -}
c69cd7691be18e45cf73b095d65a6770
  $fFunctorSimultanity_$c<$ ::
    a
    -> MusiCompoNator.Core.Simultanity b
    -> MusiCompoNator.Core.Simultanity a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2
                   @ b1
                   (x2 :: a2)
                   (eta :: MusiCompoNator.Core.Simultanity b1) ->
                 MusiCompoNator.Core.$fFunctorSimultanity_$cfmap
                   @ b1
                   @ a2
                   (\ (ds :: b1) -> x2)
                   eta) -}
c69cd7691be18e45cf73b095d65a6770
  $fFunctorSimultanity_$cfmap ::
    (a -> b)
    -> MusiCompoNator.Core.Simultanity a
    -> MusiCompoNator.Core.Simultanity b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U> -}
79753825d2a046796db4f100dfde3a97
  $fMeasurableRhythm ::
    MusiCompoNator.Core.Measurable MusiCompoNator.Core.Rhythm
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ MusiCompoNator.Core.Rhythm
                  MusiCompoNator.Core.$fMeasurableRhythm_$cwithSignature
                  MusiCompoNator.Core.$fMeasurableRhythm_$csignature
                  MusiCompoNator.Core.$fMeasurableRhythm_$cmeasure
                  MusiCompoNator.Core.$fMeasurableRhythm_$cunmeasure -}
e0feff18aa01d5817c067ec69ce747bc
  $fMeasurableRhythm1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
d301549dfd65e550c01b0e3c74cd0b10
  $fMeasurableRhythm2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
0311817d7435fec09fef40101a7a48e2
  $fMeasurableRhythm3 :: MusiCompoNator.Core.Signature a
  {- Strictness: x -}
f98ffc4c08146259c531dc977dec2268
  $fMeasurableRhythm4 :: MusiCompoNator.Core.Signature a -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
0c95d33b049e532e507a8f618495f16b
  $fMeasurableRhythm_$cmeasure ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    [a] -> MusiCompoNator.Core.Rhythm a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a2 ($dNum :: GHC.Num.Num a2) ($dOrd :: GHC.Classes.Ord a2) ->
                 MusiCompoNator.Core.Measure @ a2) -}
286199f8f5bf8c2bdb3843cd39e328c2
  $fMeasurableRhythm_$csignature ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    MusiCompoNator.Core.Rhythm a -> MusiCompoNator.Core.Signature a
  {- Arity: 2,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,1*C1(U))><L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>,
     Unfolding: (\ @ a2
                   ($dNum :: GHC.Num.Num a2)
                   ($dOrd :: GHC.Classes.Ord a2) ->
                 let {
                   $dEq :: GHC.Classes.Eq a2 = GHC.Classes.$p1Ord @ a2 $dOrd
                 } in
                 letrec {
                   collect :: [MusiCompoNator.Core.Signature a2]
                              -> MusiCompoNator.Core.Signature a2
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [MusiCompoNator.Core.Signature a2]) ->
                     case ds of wild {
                       [] -> MusiCompoNator.Core.$fMeasurableRhythm3 @ a2
                       : s ds1
                       -> case ds1 of wild1 {
                            [] -> s
                            : ipv ipv1
                            -> case s of wild2 {
                                 MusiCompoNator.Core.Times n k
                                 -> case ipv of wild3 {
                                      MusiCompoNator.Core.Times m k'
                                      -> case GHC.Classes.== @ a2 $dEq k k' of wild4 {
                                           GHC.Types.False
                                           -> MusiCompoNator.Core.Shift @ a2 wild2 (collect wild1)
                                           GHC.Types.True
                                           -> collect
                                                (GHC.Types.:
                                                   @ (MusiCompoNator.Core.Signature a2)
                                                   (MusiCompoNator.Core.Times
                                                      @ a2
                                                      (GHC.Num.$fNumInt_$c+ n m)
                                                      k)
                                                   ipv1) }
                                      MusiCompoNator.Core.Shift ipv2 ipv3
                                      -> MusiCompoNator.Core.$fMeasurableRhythm3 @ a2 }
                                 MusiCompoNator.Core.Shift ipv2 ipv3
                                 -> MusiCompoNator.Core.$fMeasurableRhythm3 @ a2 } } }
                 } in
                 let {
                   lvl33 :: a2
                   = GHC.Num.fromInteger
                       @ a2
                       $dNum
                       MusiCompoNator.Core.$fMeasurableRhythm2
                 } in
                 letrec {
                   meters :: MusiCompoNator.Core.Rhythm a2
                             -> [MusiCompoNator.Core.Signature a2]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: MusiCompoNator.Core.Rhythm a2) ->
                     case ds of wild {
                       MusiCompoNator.Core.Measure bs
                       -> GHC.Types.:
                            @ (MusiCompoNator.Core.Signature a2)
                            (MusiCompoNator.Core.Times
                               @ a2
                               MusiCompoNator.Core.$fMeasurableRhythm1
                               (letrec {
                                  go :: [a2] -> a2 -> a2
                                    <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                                  = \ (ds1 :: [a2]) (eta :: a2) ->
                                    case ds1 of wild1 {
                                      [] -> eta : y ys -> go ys (GHC.Num.+ @ a2 $dNum eta y) }
                                } in
                                go bs lvl33))
                            (GHC.Types.[] @ (MusiCompoNator.Core.Signature a2))
                       MusiCompoNator.Core.Repeat ds1 ds2
                       -> case ds1 of wild1 { GHC.Types.I# ds3 ->
                          case ds3 of ds4 {
                            DEFAULT
                            -> GHC.Base.++
                                 @ (MusiCompoNator.Core.Signature a2)
                                 (meters ds2)
                                 (meters
                                    (MusiCompoNator.Core.Repeat
                                       @ a2
                                       (GHC.Types.I# (GHC.Prim.-# ds4 1#))
                                       ds2))
                            0# -> GHC.Types.[] @ (MusiCompoNator.Core.Signature a2) } }
                       MusiCompoNator.Core.:|: r1 r2
                       -> GHC.Base.++
                            @ (MusiCompoNator.Core.Signature a2)
                            (meters r1)
                            (meters r2)
                       MusiCompoNator.Core.:-: r1 r2
                       -> GHC.Base.++
                            @ (MusiCompoNator.Core.Signature a2)
                            (meters r1)
                            (meters r2) }
                 } in
                 \ (x2 :: MusiCompoNator.Core.Rhythm a2) -> collect (meters x2)) -}
cd32b5c05445ffdd7de01e06a74a6142
  $fMeasurableRhythm_$cunmeasure ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    MusiCompoNator.Core.Rhythm a -> [a]
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><L,A><S,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a2
                   (w :: GHC.Num.Num a2)
                   (w1 :: GHC.Classes.Ord a2)
                   (w2 :: MusiCompoNator.Core.Rhythm a2) ->
                 MusiCompoNator.Core.$w$cunmeasure @ a2 w w2) -}
5e1633ddd2bf5cdc0d336823808aa4e7
  $fMeasurableRhythm_$cwithSignature ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    MusiCompoNator.Core.Signature a
    -> MusiCompoNator.Core.Rhythm a -> MusiCompoNator.Core.Rhythm a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U(A,C(C1(U)),A,A,A,A,A,A)><L,1*U><S,1*U>,
     Unfolding: (\ @ a2
                   ($dNum :: GHC.Num.Num a2)
                   ($dOrd :: GHC.Classes.Ord a2)
                   (s :: MusiCompoNator.Core.Signature a2)
                   (r :: MusiCompoNator.Core.Rhythm a2) ->
                 letrec {
                   aquire :: [a2] -> [a2] -> [a2] -> MusiCompoNator.Core.Rhythm a2
                     {- Arity: 3, Strictness: <L,U><L,1*U><S,1*U> -}
                   = \ (m :: [a2]) (ds :: [a2]) (ds1 :: [a2]) ->
                     case ds1 of wild {
                       [] -> MusiCompoNator.Core.Measure @ a2 (GHC.List.reverse @ a2 m)
                       : ipv ipv1
                       -> case ds of wild1 {
                            [] -> MusiCompoNator.Core.Measure @ a2 (GHC.List.reverse @ a2 m)
                            : q qs
                            -> case GHC.Classes.compare @ a2 $dOrd q ipv of wild2 {
                                 GHC.Types.LT
                                 -> MusiCompoNator.Core.:-:
                                      @ a2
                                      (MusiCompoNator.Core.Measure
                                         @ a2
                                         (GHC.List.reverse1
                                            @ a2
                                            (GHC.Types.: @ a2 q m)
                                            (GHC.Types.[] @ a2)))
                                      (aquire
                                         (GHC.Types.[] @ a2)
                                         qs
                                         (GHC.Types.: @ a2 (GHC.Num.- @ a2 $dNum ipv q) ipv1))
                                 GHC.Types.EQ
                                 -> MusiCompoNator.Core.:|:
                                      @ a2
                                      (MusiCompoNator.Core.Measure
                                         @ a2
                                         (GHC.List.reverse1
                                            @ a2
                                            (GHC.Types.: @ a2 ipv m)
                                            (GHC.Types.[] @ a2)))
                                      (aquire (GHC.Types.[] @ a2) qs ipv1)
                                 GHC.Types.GT
                                 -> aquire
                                      (GHC.Types.: @ a2 ipv m)
                                      (GHC.Types.: @ a2 (GHC.Num.- @ a2 $dNum q ipv) qs)
                                      ipv1 } } }
                 } in
                 aquire
                   (GHC.Types.[] @ a2)
                   (MusiCompoNator.Core.$fMeasurableRhythm4 @ a2 s)
                   (MusiCompoNator.Core.$w$cunmeasure @ a2 $dNum r)) -}
c69cd7691be18e45cf73b095d65a6770
  $fMonoidSimultanity ::
    GHC.Base.Monoid (MusiCompoNator.Core.Simultanity pitch)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ pitch.
                  @ (MusiCompoNator.Core.Simultanity pitch)
                  (MusiCompoNator.Core.$fSemigroupSimultanity @ pitch)
                  (MusiCompoNator.Core.Silence @ pitch)
                  (MusiCompoNator.Core.:=: @ pitch)
                  (MusiCompoNator.Core.$fMonoidSimultanity_go @ pitch) -}
c69cd7691be18e45cf73b095d65a6770
  $fMonoidSimultanity_go ::
    [MusiCompoNator.Core.Simultanity pitch]
    -> MusiCompoNator.Core.Simultanity pitch
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
d4024a57f0b29f741a974bb072806c84
  $fSemigroupRhythm ::
    GHC.Base.Semigroup (MusiCompoNator.Core.Rhythm b)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ b1.
                  @ (MusiCompoNator.Core.Rhythm b1)
                  (MusiCompoNator.Core.:|: @ b1)
                  (MusiCompoNator.Core.$fSemigroupRhythm_$csconcat @ b1)
                  (MusiCompoNator.Core.$fSemigroupRhythm_$cstimes @ b1) -}
d4024a57f0b29f741a974bb072806c84
  $fSemigroupRhythm1 ::
    MusiCompoNator.Core.Rhythm b
    -> [MusiCompoNator.Core.Rhythm b] -> MusiCompoNator.Core.Rhythm b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
d4024a57f0b29f741a974bb072806c84
  $fSemigroupRhythm_$csconcat ::
    GHC.Base.NonEmpty (MusiCompoNator.Core.Rhythm b)
    -> MusiCompoNator.Core.Rhythm b
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ b1
                   (ds :: GHC.Base.NonEmpty (MusiCompoNator.Core.Rhythm b1)) ->
                 case ds of wild { GHC.Base.:| a2 as ->
                 MusiCompoNator.Core.$fSemigroupRhythm1 @ b1 a2 as }) -}
d4024a57f0b29f741a974bb072806c84
  $fSemigroupRhythm_$cstimes ::
    GHC.Real.Integral b2 =>
    b2
    -> MusiCompoNator.Core.Rhythm b1 -> MusiCompoNator.Core.Rhythm b1
  {- Arity: 1, Strictness: <L,U> -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fSemigroupSignature ::
    GHC.Base.Semigroup (MusiCompoNator.Core.Signature a)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ a2.
                  @ (MusiCompoNator.Core.Signature a2)
                  (MusiCompoNator.Core.Shift @ a2)
                  (MusiCompoNator.Core.$fSemigroupSignature_$csconcat @ a2)
                  (MusiCompoNator.Core.$fSemigroupSignature_$cstimes @ a2) -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fSemigroupSignature1 ::
    MusiCompoNator.Core.Signature a
    -> [MusiCompoNator.Core.Signature a]
    -> MusiCompoNator.Core.Signature a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fSemigroupSignature_$csconcat ::
    GHC.Base.NonEmpty (MusiCompoNator.Core.Signature a)
    -> MusiCompoNator.Core.Signature a
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2
                   (ds :: GHC.Base.NonEmpty (MusiCompoNator.Core.Signature a2)) ->
                 case ds of wild { GHC.Base.:| a3 as ->
                 MusiCompoNator.Core.$fSemigroupSignature1 @ a2 a3 as }) -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fSemigroupSignature_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> MusiCompoNator.Core.Signature a
    -> MusiCompoNator.Core.Signature a
  {- Arity: 1, Strictness: <L,U> -}
c69cd7691be18e45cf73b095d65a6770
  $fSemigroupSimultanity ::
    GHC.Base.Semigroup (MusiCompoNator.Core.Simultanity pitch)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ pitch.
                  @ (MusiCompoNator.Core.Simultanity pitch)
                  (MusiCompoNator.Core.:=: @ pitch)
                  (MusiCompoNator.Core.$fSemigroupSimultanity_$csconcat @ pitch)
                  (MusiCompoNator.Core.$fSemigroupSimultanity_$cstimes @ pitch) -}
c69cd7691be18e45cf73b095d65a6770
  $fSemigroupSimultanity1 ::
    MusiCompoNator.Core.Simultanity pitch
    -> [MusiCompoNator.Core.Simultanity pitch]
    -> MusiCompoNator.Core.Simultanity pitch
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U> -}
c69cd7691be18e45cf73b095d65a6770
  $fSemigroupSimultanity_$csconcat ::
    GHC.Base.NonEmpty (MusiCompoNator.Core.Simultanity pitch)
    -> MusiCompoNator.Core.Simultanity pitch
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ pitch
                   (ds :: GHC.Base.NonEmpty
                            (MusiCompoNator.Core.Simultanity pitch)) ->
                 case ds of wild { GHC.Base.:| a2 as ->
                 MusiCompoNator.Core.$fSemigroupSimultanity1 @ pitch a2 as }) -}
c69cd7691be18e45cf73b095d65a6770
  $fSemigroupSimultanity_$cstimes ::
    GHC.Real.Integral b =>
    b
    -> MusiCompoNator.Core.Simultanity pitch
    -> MusiCompoNator.Core.Simultanity pitch
  {- Arity: 1, Strictness: <L,U> -}
d4024a57f0b29f741a974bb072806c84
  $fShowRhythm ::
    GHC.Show.Show beat =>
    GHC.Show.Show (MusiCompoNator.Core.Rhythm beat)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,A,C(C(U)))>m, Inline: CONLIKE,
     Unfolding: DFun: @ beat1 (v2 :: GHC.Show.Show beat1).
                  @ (MusiCompoNator.Core.Rhythm beat1)
                  (MusiCompoNator.Core.$fShowRhythm_$cshowsPrec @ beat1 v2)
                  (MusiCompoNator.Core.$fShowRhythm_$cshow @ beat1 v2)
                  (MusiCompoNator.Core.$fShowRhythm_$cshowList @ beat1 v2) -}
d4024a57f0b29f741a974bb072806c84
  $fShowRhythm_$cshow ::
    GHC.Show.Show beat =>
    MusiCompoNator.Core.Rhythm beat -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,A,C(C(U)))><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ beat1
                   ($dShow :: GHC.Show.Show beat1)
                   (x2 :: MusiCompoNator.Core.Rhythm beat1) ->
                 MusiCompoNator.Core.$fShowRhythm_$cshowsPrec
                   @ beat1
                   $dShow
                   MusiCompoNator.Core.$fFoldableSimultanity9
                   x2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d4024a57f0b29f741a974bb072806c84
  $fShowRhythm_$cshowList ::
    GHC.Show.Show beat =>
    [MusiCompoNator.Core.Rhythm beat] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,A,C(C(U)))><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ beat1
                   ($dShow :: GHC.Show.Show beat1)
                   (ls :: [MusiCompoNator.Core.Rhythm beat1])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (MusiCompoNator.Core.Rhythm beat1)
                   (MusiCompoNator.Core.$fShowRhythm_$cshowsPrec
                      @ beat1
                      $dShow
                      MusiCompoNator.Core.$fFoldableSimultanity9)
                   ls
                   s) -}
d4024a57f0b29f741a974bb072806c84
  $fShowRhythm_$cshowsPrec ::
    GHC.Show.Show beat =>
    GHC.Types.Int -> MusiCompoNator.Core.Rhythm beat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,A,C(C(U)))><S(S),1*U(U)><S,1*U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ beat1
                   (w :: GHC.Show.Show beat1)
                   (w1 :: GHC.Types.Int)
                   (w2 :: MusiCompoNator.Core.Rhythm beat1) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 MusiCompoNator.Core.$w$cshowsPrec @ beat1 w ww1 w2 }) -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fShowSignature ::
    GHC.Show.Show a => GHC.Show.Show (MusiCompoNator.Core.Signature a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,C(U),A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a2 (v2 :: GHC.Show.Show a2).
                  @ (MusiCompoNator.Core.Signature a2)
                  (MusiCompoNator.Core.$fShowSignature_$cshowsPrec @ a2 v2)
                  (MusiCompoNator.Core.$fShowSignature_$cshow @ a2 v2)
                  (MusiCompoNator.Core.$fShowSignature_$cshowList @ a2 v2) -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fShowSignature_$cshow ::
    GHC.Show.Show a =>
    MusiCompoNator.Core.Signature a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><S,1*U> -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fShowSignature_$cshowList ::
    GHC.Show.Show a =>
    [MusiCompoNator.Core.Signature a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ a2
                   ($dShow :: GHC.Show.Show a2)
                   (ls :: [MusiCompoNator.Core.Signature a2])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (MusiCompoNator.Core.Signature a2)
                   (\ (x2 :: MusiCompoNator.Core.Signature a2)
                      (s1 :: GHC.Base.String)[OneShot] ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (MusiCompoNator.Core.$fShowSignature_$cshow @ a2 $dShow x2)
                      s1)
                   ls
                   s) -}
e6d10c670c4a8f4b1c99e83467ccf99a
  $fShowSignature_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> MusiCompoNator.Core.Signature a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a2
                   ($dShow :: GHC.Show.Show a2)
                   (ds :: GHC.Types.Int)
                   (x2 :: MusiCompoNator.Core.Signature a2)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b1
                      (c1 :: GHC.Types.Char -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b1
                      c1
                      n
                      (MusiCompoNator.Core.$fShowSignature_$cshow @ a2 $dShow x2))
                   s) -}
c69cd7691be18e45cf73b095d65a6770
  $fShowSimultanity ::
    GHC.Show.Show pitch =>
    GHC.Show.Show (MusiCompoNator.Core.Simultanity pitch)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ pitch (v2 :: GHC.Show.Show pitch).
                  @ (MusiCompoNator.Core.Simultanity pitch)
                  (MusiCompoNator.Core.$fShowSimultanity_$cshowsPrec @ pitch v2)
                  (MusiCompoNator.Core.$fShowSimultanity_$cshow @ pitch v2)
                  (MusiCompoNator.Core.$fShowSimultanity_$cshowList @ pitch v2) -}
c69cd7691be18e45cf73b095d65a6770
  $fShowSimultanity_$cshow ::
    GHC.Show.Show pitch =>
    MusiCompoNator.Core.Simultanity pitch -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ pitch
                   ($dShow :: GHC.Show.Show pitch)
                   (x2 :: MusiCompoNator.Core.Simultanity pitch) ->
                 MusiCompoNator.Core.$fShowSimultanity_$cshowsPrec
                   @ pitch
                   $dShow
                   MusiCompoNator.Core.$fFoldableSimultanity9
                   x2
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c69cd7691be18e45cf73b095d65a6770
  $fShowSimultanity_$cshowList ::
    GHC.Show.Show pitch =>
    [MusiCompoNator.Core.Simultanity pitch] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ pitch
                   ($dShow :: GHC.Show.Show pitch)
                   (ls :: [MusiCompoNator.Core.Simultanity pitch])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (MusiCompoNator.Core.Simultanity pitch)
                   (MusiCompoNator.Core.$fShowSimultanity_$cshowsPrec
                      @ pitch
                      $dShow
                      MusiCompoNator.Core.$fFoldableSimultanity9)
                   ls
                   s) -}
c69cd7691be18e45cf73b095d65a6770
  $fShowSimultanity_$cshowsPrec ::
    GHC.Show.Show pitch =>
    GHC.Types.Int
    -> MusiCompoNator.Core.Simultanity pitch -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><L,1*U(U)><S,1*U> -}
60945167913be691c0c802b7f79f7435
  $tc':-: :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10337230099961405767##
                   16710892361636538270##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc':-:2
                   1#
                   MusiCompoNator.Core.$tc':-:1) -}
e6ee699000874f75690d16ceea5ff281
  $tc':-:1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f9dbfc9c29256c7cda88a26e7326969b
  $tc':-:2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc':-:3) -}
87e106e291d4b1ee0b34e4ea9a42930f
  $tc':-:3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("':-:"#) -}
e8527825287498706320eba67792b549
  $tc':=: :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2297079193710417472##
                   2435478562144585251##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc':=:2
                   1#
                   MusiCompoNator.Core.$tc':=:1) -}
21ffae77e6489bbb48bac6516da93343
  $tc':=:1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7d168aff2b9e15b7eceb501d1c6e0a75
  $tc':=:2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc':=:3) -}
5991135aea837710971d65fd7d41bfa2
  $tc':=:3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("':=:"#) -}
1dccf880fdda29ea723e610ea6b47ce2
  $tc':|: :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17611183640605244509##
                   2539688607186860302##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc':|:1
                   1#
                   MusiCompoNator.Core.$tc':-:1) -}
3cec479ccc3c01c5dd4b6088d2704c83
  $tc':|:1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc':|:2) -}
ad32a6efb4a87aca66e414ab54339579
  $tc':|:2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("':|:"#) -}
d984d93855d33a751dcf1dc349dd4905
  $tc'Measure :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9388656799297269805##
                   11932101476303295519##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Measure2
                   1#
                   MusiCompoNator.Core.$tc'Measure1) -}
5473bb075147e5ac65bd795735dded9d
  $tc'Measure1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7a18a7d8df0d177491d5c39c8f3f5973
  $tc'Measure2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Measure3) -}
737e723d3085b3bfa4bac6aed24bbc2f
  $tc'Measure3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Measure"#) -}
4529b8b7ef2131f366f6e6fbed1aab15
  $tc'Repeat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13114973522018560018##
                   15122699218260036629##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Repeat2
                   1#
                   MusiCompoNator.Core.$tc'Repeat1) -}
2e941fad8c8e9facf35ebad8a65eead4
  $tc'Repeat1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c0b9f936fcde121965f4b4fd3e55be52
  $tc'Repeat2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Repeat3) -}
4aec3e551723240b70d2834fd049e9c8
  $tc'Repeat3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Repeat"#) -}
ab8cf5a0ebcacb08493403f197093a0c
  $tc'Shift :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12864181529425666018##
                   14496826969749292833##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Shift2
                   1#
                   MusiCompoNator.Core.$tc'Shift1) -}
827948cec2da5579db4b6ca73c5c1a25
  $tc'Shift1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
17308d24874488b9cc67f91a187b93a2
  $tc'Shift2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Shift3) -}
11c92d11c8a87f12317edd0714e806a6
  $tc'Shift3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Shift"#) -}
626004f729f0ed5f5a6c9d468e464b9c
  $tc'Silence :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14775684487924648209##
                   695855588334760664##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Silence2
                   1#
                   MusiCompoNator.Core.$tc'Silence1) -}
de36b48517098e8a29c428e412b652ad
  $tc'Silence1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
42ee41a39467e8061ed1480cbe6656b1
  $tc'Silence2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Silence3) -}
dc5637a8acbc13675e61032204035ed0
  $tc'Silence3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Silence"#) -}
e6f95547142e8c9704006ef8e91fd5eb
  $tc'Sound :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3134731010948751859##
                   1515599301347308957##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Sound2
                   1#
                   MusiCompoNator.Core.$tc'Sound1) -}
825b12fe03871ec04a481c7b6f422ede
  $tc'Sound1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8cb110eb8ee8932477dfa105531a3e3d
  $tc'Sound2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Sound3) -}
8980190b578fc16476d6638b9d53c178
  $tc'Sound3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sound"#) -}
a6ab819f8e52001670a9cf0c5cb846f4
  $tc'Times :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18132910460999361847##
                   15978593334971102873##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tc'Times2
                   1#
                   MusiCompoNator.Core.$tc'Times1) -}
0f17c088fe4d824c2dc91187734387c1
  $tc'Times1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4fff6364c11fbee19ce8475630811021
  $tc'Times2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tc'Times3) -}
f5060336cd298338a0e749c4668dc2c5
  $tc'Times3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Times"#) -}
6b7b72bb9aefb9494e8c42381e8235f5
  $tcMeasurable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8271307377141516016##
                   4367651717683515620##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tcMeasurable2
                   0#
                   MusiCompoNator.Core.$tcMeasurable1) -}
3ad867d2a433b996eacad25a99ed03da
  $tcMeasurable1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
959140a683d53c7d3a9ea9e8860d6ae4
  $tcMeasurable2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   MusiCompoNator.Core.$tcMeasurable3) -}
54dd362bd69838888d1d632255d56aea
  $tcMeasurable3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Measurable"#) -}
a63fab25b513a71dba66724280417c3b
  $tcRhythm :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12511822667392608871##
                   13122048304118214967##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tcRhythm1
                   0#
                   GHC.Types.krep$*Arr*) -}
892cbc1f265e2525e8bff71442b3c14a
  $tcRhythm1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tcRhythm2) -}
9b0374f80ffdad681fcba8a5ce2ab40b
  $tcRhythm2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Rhythm"#) -}
ce46bae1e4c37c0a116ebe702420acd7
  $tcSignature :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13417611875854618641##
                   12466586257502689694##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tcSignature1
                   0#
                   GHC.Types.krep$*Arr*) -}
3ab4e2a8e5fd20e88ea6dd2c217a4a16
  $tcSignature1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$tcSignature2) -}
88f50ebc55993ffbf43f72db4f04ef23
  $tcSignature2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Signature"#) -}
88fd962d3b06600b12ba5dcca0fe4b4e
  $tcSimultanity :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   738291682807734160##
                   1066567196760734234##
                   MusiCompoNator.Core.$trModule
                   MusiCompoNator.Core.$tcSimultanity1
                   0#
                   GHC.Types.krep$*Arr*) -}
387f1650302dcf4de8bc945325b4f4c6
  $tcSimultanity1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   MusiCompoNator.Core.$tcSimultanity2) -}
f7f72e027d5039918f26f92d580366d0
  $tcSimultanity2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Simultanity"#) -}
2f68e88175370f71174bd7ec0621f5e3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   MusiCompoNator.Core.$trModule3
                   MusiCompoNator.Core.$trModule1) -}
74c96f350d88685a5bb302816822000b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$trModule2) -}
2876bc18a14247301d72f94ba4e91aa0
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MusiCompoNator.Core"#) -}
05e580dbf7ed36ed82b607e7b1e3f850
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS MusiCompoNator.Core.$trModule4) -}
c9a88e7d71300b108adbf101739786ef
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("MusiCompoNator-0.1.0.0-E8TyBQY57o81uUM72HIoHR"#) -}
d4024a57f0b29f741a974bb072806c84
  $w$cshowsPrec ::
    GHC.Show.Show beat =>
    GHC.Prim.Int# -> MusiCompoNator.Core.Rhythm beat -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,A,C(C(U)))><S,U><S,1*U>,
     Inline: [0] -}
015e9f1fa39786a6b39ab14c87553cbf
  $w$cunmeasure ::
    GHC.Num.Num a => MusiCompoNator.Core.Rhythm a -> [a]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A,A,A,A,A,A)><S,1*U>, Inline: [0] -}
fbb10c45eb094f02b2b535114b0ca47d
  $wi' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 1# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
b250df7f325d1fb2a5d4db30b4bf9771
  $wi'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 1# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
919c5732fb08a59ba853a8c7d9bb0a86
  $wi_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 1# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
d165cf61f9729f4a8ca5f6bb2713bf45
  $wi__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 1# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
f845349e079d4955620d5603d9900bdd
  $wii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 2# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
e7df5ef38c81eb029c16c39e341f0f8a
  $wii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 2# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
da0ad308d856420ad9c2418418695ff4
  $wii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 2# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
17fdeafe111b78661a29231704659590
  $wii__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 2# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
15f3f8e52dfee5b58f502e0f2eb4400d
  $wiii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 3# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
b5ab99589401a9b2bb8884e4f612c4f8
  $wiii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 3# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
c6dc369b4be4e9d79ec8fabeabec57f8
  $wiii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 3# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
db11d8e7210ad559d59312567deaa3c0
  $wiii__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 3# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
b05a9ae4072a37a897af89455fa8cd47
  $wiix__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 8# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
de203f01ee67f38851caf5376d251eed
  $wionian ::
    MusiCompoNator.Core.Pitch
    -> (# MusiCompoNator.Core.Pitch, [MusiCompoNator.Core.Pitch] #)
  {- Arity: 1, Strictness: <L,U(U,U)>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Pitch) ->
                 (# case w of ww { GHC.Real.:% ww1 ww2 ->
                    case GHC.Real.$w$s$c+
                           ww1
                           ww2
                           MusiCompoNator.Core.$fMeasurableRhythm2
                           GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } },
                    GHC.Types.:
                      @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      (case w of ww { GHC.Real.:% ww1 ww2 ->
                       case GHC.Real.$w$s$c+
                              ww1
                              ww2
                              MusiCompoNator.Core.aeolian5
                              GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                       GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                      (GHC.Types.:
                         @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                         (case w of ww { GHC.Real.:% ww1 ww2 ->
                          case GHC.Real.$w$s$c+
                                 ww1
                                 ww2
                                 MusiCompoNator.Core.aeolian4
                                 GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                          GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                         (GHC.Types.:
                            @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                            (case w of ww { GHC.Real.:% ww1 ww2 ->
                             case GHC.Real.$w$s$c+
                                    ww1
                                    ww2
                                    MusiCompoNator.Core.aeolian3
                                    GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                             GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                            (GHC.Types.:
                               @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                               (case w of ww { GHC.Real.:% ww1 ww2 ->
                                case GHC.Real.$w$s$c+
                                       ww1
                                       ww2
                                       MusiCompoNator.Core.aeolian2
                                       GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                                GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                               (GHC.Types.:
                                  @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                  (case w of ww { GHC.Real.:% ww1 ww2 ->
                                   case GHC.Real.$w$s$c+
                                          ww1
                                          ww2
                                          MusiCompoNator.Core.a1
                                          GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                                   GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                                  (GHC.Types.:
                                     @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                                     (case w of ww { GHC.Real.:% ww1 ww2 ->
                                      case GHC.Real.$w$s$c+
                                             ww1
                                             ww2
                                             MusiCompoNator.Core.aeolian1
                                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                                      GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                                     (GHC.Types.[]
                                        @ (GHC.Real.Ratio GHC.Integer.Type.Integer))))))) #)) -}
5b21af10a4f47c4d9f4e07a12a471fb3
  $wiv' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 4# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
71c885c4e03d430102982aeb0b13339f
  $wiv'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 4# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
a37ac402c8864218c8dcb138744e1fb2
  $wiv_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 4# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
3d8a6c24c2eb42bd8864b7ed199435f5
  $wiv__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 4# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
32c6a0e443578e6af9a9699d7d558063
  $wix' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 9# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
e5c26d276e2a577e9a42a336ea72ac94
  $wix'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 9# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
cbe0809a10d7690ce5835d4b631ddf29
  $wix_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 9# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
c9eb576d0433b9a2ae8975c0f0e07c58
  $wix__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 9# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
3f083361e734f52342ecd67f75f9be4b
  $wstep ::
    GHC.Prim.Int#
    -> MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Scale
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
591028a0a0cf6f1427d4557b672138ae
  $wv' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 5# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
dc4efb3f100e40e3571e6037318a1bfc
  $wv'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 5# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
da2f926a68501de7f89efdeaf036a52f
  $wv_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 5# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
fcb3d4011143099f227a714f0568c994
  $wv__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 5# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
6c92e2f185d4e78fed2aff8a8e9a4376
  $wvi' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 6# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
54610e72145cdfa8a9fdd16af4a0d402
  $wvi'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 6# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
7e382d67b8c06ac6ce6c492d3366ee68
  $wvi_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 6# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
528829cd8f4a3909306ec675f2d4f881
  $wvi__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 6# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
bb2973007a82cc9cd52c2d77c0e219a5
  $wvii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 7# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
513c80cc4c2d32144c5d5f2be69b0e29
  $wvii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 7# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
eb5ec8ca73ec4b67cae338699347da70
  $wvii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 7# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
cb938670172f67fc1801a5569746f86a
  $wvii__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 7# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
70270d3334be6dc114b3b61547658edd
  $wviii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 8# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
f9287569b3d691dc55ccb31094e562df
  $wviii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 8# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
178d52660999b1356a9a1adf0c5aa495
  $wviii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 8# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
17b26f80b1e33ba0f39df0fc777ed68d
  $wx' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 10# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
89cbe9600645e351bb773026b801032b
  $wx'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 10# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
9a248492e9e55b9beb67d7d86b048a4b
  $wx_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 10# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
fea58e65b6fe0e3f923604c319bf113a
  $wx__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 10# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
ec8c68e4663db54749bfa1c3b31fb380
  $wxi' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 11# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
2f5fbafbfeac334a8a1b6e83edf91565
  $wxi'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 11# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
cb57e1564eb88fe0bc8fd70c2f327902
  $wxi_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 11# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
6265e13266827a0f020407d5a75b716e
  $wxi__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 11# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
306141ea14e936aa11fd974218ade11c
  $wxii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 12# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
0e92e9c5bd7d6403725b556fa3811c77
  $wxii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 12# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
0ffbfa21be2f4c8aab71c62eef14b3cf
  $wxii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 12# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
7a97a25c973d2411b79c46c3ae7b0004
  $wxii__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 12# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
32b676fd1f5520ac7dc4764ff18dfdb7
  $wxiii' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 13# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 } }) -}
57ba108a6ae71c0f8c22e77176c58d87
  $wxiii'' ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 13# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww3 { GHC.Real.:% ww4 ww5 ->
                      case GHC.Real.$w$s$c+
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1
                             ww4
                             ww5 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww7
                        ww8 } } }) -}
c36690ebbe8e026cd19918ee4ee738b6
  $wxiii_ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 13# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } }) -}
30df0b270de9a1fd8e9b28b5715f947b
  $wxiii__ ::
    MusiCompoNator.Core.Scale
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wstep 13# w of wild {
                   []
                   -> case GHC.List.badHead
                      ret_ty (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
                      of {}
                   : x2 ds1
                   -> case x2 of ww { GHC.Real.:% ww1 ww2 ->
                      case GHC.Real.$w$s$c-
                             ww1
                             ww2
                             MusiCompoNator.Core.down_dt
                             GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                      GHC.Real.$w$s$c-
                        ww7
                        ww8
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 } } }) -}
d2f4471be19b5433a1f6e5f22fa9f80c
  $wxs :: GHC.Prim.Int# -> [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0] -}
a80e6d3f808d1ddabcc8b782925d82f4
  $wxs1 :: GHC.Prim.Int# -> [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0] -}
c23e0340ce80113cffd724e9fe0ede83
  $wxs2 :: GHC.Prim.Int# -> [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0] -}
e63a97af5fc2f75e6dd466b3574770ba
  $wxs3 :: GHC.Prim.Int# -> [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0] -}
2b0a43aad2615772bb70ed795b89bebd
  $wxs4 :: GHC.Prim.Int# -> [GHC.Real.Ratio GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: [0] -}
6cc984b2474b861828e2b4831939749a
  type Beat = GHC.Real.Rational
79753825d2a046796db4f100dfde3a97
  class Measurable (m :: * -> *) where
    withSignature :: (GHC.Num.Num a, GHC.Classes.Ord a) =>
                     MusiCompoNator.Core.Signature a -> m a -> m a
    signature :: (GHC.Num.Num a, GHC.Classes.Ord a) =>
                 m a -> MusiCompoNator.Core.Signature a
    measure :: (GHC.Num.Num a, GHC.Classes.Ord a) => [a] -> m a
    unmeasure :: (GHC.Num.Num a, GHC.Classes.Ord a) => m a -> [a]
    {-# MINIMAL withSignature, signature, measure, unmeasure #-}
ff40311ff49845e5dc11100868906f5f
  type Pitch = GHC.Real.Rational
d4024a57f0b29f741a974bb072806c84
  data Rhythm beat
    = Measure [beat]
    | Repeat GHC.Types.Int (MusiCompoNator.Core.Rhythm beat)
    | (MusiCompoNator.Core.Rhythm beat)
      :|:
      (MusiCompoNator.Core.Rhythm beat)
    | (MusiCompoNator.Core.Rhythm beat)
      :-:
      (MusiCompoNator.Core.Rhythm beat)
8d34a5f41714f4008ca3d921c79f0642
  type Scale = [MusiCompoNator.Core.Pitch]
8f51dd550d3a26dc6ac565ccf5f76f24
  type Sequence harmony = [harmony]
e6d10c670c4a8f4b1c99e83467ccf99a
  data Signature a
    = Times GHC.Types.Int a
    | Shift (MusiCompoNator.Core.Signature a)
            (MusiCompoNator.Core.Signature a)
c69cd7691be18e45cf73b095d65a6770
  data Simultanity pitch
    = Silence
    | Sound pitch
    | (MusiCompoNator.Core.Simultanity pitch)
      :=:
      (MusiCompoNator.Core.Simultanity pitch)
fb1e592d82294873838723f8c5018cbc
  a :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.a1
                   GHC.Real.$fEnumRatio1) -}
614b00d26f3a868431dad77d2999688d
  a1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (9) -}
05d9f2528cc6cfcb6e0791dbd25dfce9
  aeolian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   6#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.a1
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
6aab14ae5bc597677b2e053b141e75e4
  aeolian1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (11) -}
4147f74166a5cc4e2b8afed785cc9a66
  aeolian2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7) -}
8090610a9c311c555be3dc636476fac8
  aeolian3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
a91ee5aeb3125ab07741cfcadf1e9051
  aeolian4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
4f9a7803c88695d879abd807c50366de
  aeolian5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
50724bb119735deb6161467c84755f11
  b :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.aeolian1
                   GHC.Real.$fEnumRatio1) -}
c5280751f61270ab5a1305c9f4c14a12
  beat ::
    (GHC.Num.Num b, GHC.Classes.Ord b) =>
    b -> MusiCompoNator.Core.Rhythm b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,U>m1,
     Unfolding: InlineRule (3, True, False)
                (\ @ b1
                   ($dNum :: GHC.Num.Num b1)
                   ($dOrd :: GHC.Classes.Ord b1)
                   (b2 :: b1) ->
                 MusiCompoNator.Core.Measure
                   @ b1
                   (GHC.Types.: @ b1 b2 (GHC.Types.[] @ b1))) -}
b7fb33c2fdb3316bbe2c0aacc083dabb
  c :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.$fMeasurableRhythm2
                   GHC.Real.$fEnumRatio1) -}
663b03c35fb4c68311837653bbf0f3f5
  d :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.aeolian5
                   GHC.Real.$fEnumRatio1) -}
e0f564d3ffe482b1f7f30a1d721614e5
  dorian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   2#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.aeolian5
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
c0bcb674427a7ef91f0ce1fade411cc1
  dotted ::
    MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1,
     Unfolding: (MusiCompoNator.Core.$fFunctorRhythm_$cfmap
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   MusiCompoNator.Core.dotted1) -}
d91f9e4a32b0b941c8c53f464ea89cc7
  dotted1 ::
    GHC.Real.Ratio GHC.Integer.Type.Integer
    -> GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (GHC.Real.$fFractionalRatio_$s$c*
                   MusiCompoNator.Core.dotted2) -}
bd4058b60d409e56ebb503338b8d3f41
  dotted2 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.dotted3
                        MusiCompoNator.Core.aeolian5 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4bd069a2e34de334e579ed99858f0769
  dotted3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
660481cb02217715ac0f6f526556e1be
  down :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (y :: MusiCompoNator.Core.Pitch) ->
                 case y of ww { GHC.Real.:% ww1 ww2 ->
                 case GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } }) -}
68d01f1625d74f99a6a8c8a898a31bdf
  down_dt :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (12) -}
31d9ed1237d7eabeb4ad132b702961f0
  duration ::
    (GHC.Num.Num a, GHC.Classes.Ord a,
     MusiCompoNator.Core.Measurable m) =>
    m a -> a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U,U,U,U,U,U,U)><L,U><L,1*U(A,A,A,1*C1(C1(C(U))))>,
     Unfolding: (\ @ a2
                   @ m :: * -> *
                   ($dNum :: GHC.Num.Num a2)
                   ($dOrd :: GHC.Classes.Ord a2)
                   ($dMeasurable :: MusiCompoNator.Core.Measurable m) ->
                 let {
                   f5 :: a2
                   = GHC.Num.fromInteger
                       @ a2
                       $dNum
                       MusiCompoNator.Core.$fMeasurableRhythm2
                 } in
                 let {
                   g1 :: m a2 -> [a2]
                   = MusiCompoNator.Core.unmeasure @ m $dMeasurable @ a2 $dNum $dOrd
                 } in
                 \ (x2 :: m a2) ->
                 letrec {
                   go :: [a2] -> a2 -> a2
                     <join 2> {- Arity: 2, Strictness: <S,1*U><L,U> -}
                   = \ (ds :: [a2]) (eta :: a2) ->
                     case ds of wild {
                       [] -> eta : y ys -> go ys (GHC.Num.+ @ a2 $dNum eta y) }
                 } in
                 go (g1 x2) f5) -}
4cf8df1702743d389798be84c9e96a28
  e :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.aeolian4
                   GHC.Real.$fEnumRatio1) -}
8a28699aab0526763d799bd568aca6bc
  en :: MusiCompoNator.Core.Beat
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.en2
                        MusiCompoNator.Core.en1 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
d1ee571078eff82648ceb5daffc18d4f
  en1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (8) -}
cd8ebb4a20d28e03b20c3405012abf1d
  en2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
3bbeaac085da7149f7139962e60291fb
  ens ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1, Strictness: <L,1*U(U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 MusiCompoNator.Core.Measure
                   @ MusiCompoNator.Core.Beat
                   (case w of wild1 { GHC.Types.I# y ->
                    case GHC.Prim.<# 0# y of lwild {
                      DEFAULT -> GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      1# -> MusiCompoNator.Core.$wxs y } })) -}
f83454e65aa20f049e93c78e0d0e7dae
  f :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.aeolian3
                   GHC.Real.$fEnumRatio1) -}
81bee2fa50995fad71a9269ed70408a2
  flat :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (y :: MusiCompoNator.Core.Pitch) ->
                 case y of ww { GHC.Real.:% ww1 ww2 ->
                 case GHC.Real.$w$s$c-
                        ww1
                        ww2
                        MusiCompoNator.Core.en2
                        GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } }) -}
90fc3a00d6a3061df9a5045479987004
  g :: MusiCompoNator.Core.Pitch
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Real.:%
                   @ GHC.Integer.Type.Integer
                   MusiCompoNator.Core.aeolian2
                   GHC.Real.$fEnumRatio1) -}
4ee0dcf071cc0ffa0eba10abbaac035e
  hn :: MusiCompoNator.Core.Beat
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.en2
                        MusiCompoNator.Core.aeolian5 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4aa2098b9d072e0f5c53da23bdea4ed7
  hns ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1, Strictness: <L,1*U(U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 MusiCompoNator.Core.Measure
                   @ MusiCompoNator.Core.Beat
                   (case w of wild1 { GHC.Types.I# y ->
                    case GHC.Prim.<# 0# y of lwild {
                      DEFAULT -> GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      1# -> MusiCompoNator.Core.$wxs1 y } })) -}
d9899f1e20034a9e82ac5d4aca578a5c
  i :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step
                        MusiCompoNator.Core.$fMeasurableRhythm1
                        x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
dda4749b8f4ad8963163e03cd75bbbb1
  i' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wi' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
0bec31e22beca7672f25e6f71656e4a1
  i'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wi'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
72b12b662b2d88511d05952dc102453c
  i_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wi_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
8fccad4ad5b42560aa7fc51535b1da78
  i__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wi__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
0369afd2624366e45ed5b77813c5c8e8
  ii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.ii1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
8e04f43909125b7749460613192c3508
  ii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
b452dfdeaea738b48334bd29d19183fd
  ii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
3beb07e313f30348e4a2982664027fbb
  ii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
317b7903626f5f2217a6bdc40e03e0a1
  ii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
657ab6fb57c947cd2a20d45347788578
  ii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
e26a4e1e4b958e73631487f644499c74
  iii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.iii1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
ec3af791541f98ba5044a26dadc371ce
  iii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
60d0e9cfd52a10be63d00c1a9a6f2d74
  iii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
b5f7fece8274f18d7ad278201d968b35
  iii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
0d93a27c6230f4ad2cf326ce5d391021
  iii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
845bbd07355f4811a03b9f6b9947df91
  iii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
a4c9534c287ab86ba42efaa1a269f932
  iiv :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True) MusiCompoNator.Core.iii -}
b7acce58d05a439fe6a7c208ddae2496
  iiv' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
2b415d85b8ceebf220aeec81e2ee2f7c
  iiv'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
16cbfb59d1e0a7c3fd8540b36aceec15
  iiv_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
a1215661b6d6846c76fce63c455984ba
  iiv__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
8e5f01dd72be66a2a5f13fb1050e4276
  iix :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True) MusiCompoNator.Core.viii -}
44a03aa0ccbfae5d0abea6c385d58505
  iix' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
430fb564b6b022291c7dab9e8ac461cb
  iix'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
2f6bfd4965487cd34c27b73eada40c45
  iix_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
05b054e002395b72c74b70d8a05f9fc4
  iix__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiix__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
6209db995b546dafc7a68f5a8f12b354
  index ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Scale
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x2 :: GHC.Types.Int) (eta :: MusiCompoNator.Core.Scale) ->
                 case x2 of wild { GHC.Types.I# x3 ->
                 MusiCompoNator.Core.step
                   (GHC.Types.I# (GHC.Prim.+# x3 1#))
                   eta }) -}
e3ab8c75597732b3e151bb0bc4eaa358
  invertl :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,U>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 GHC.Types.:
                   @ MusiCompoNator.Core.Pitch
                   (MusiCompoNator.Core.invertl_go
                      w
                      (GHC.List.lastError @ MusiCompoNator.Core.Pitch))
                   (GHC.List.init @ MusiCompoNator.Core.Pitch w)) -}
8027d745eebd9af1b7e34450e3fa98da
  invertl_go ::
    [MusiCompoNator.Core.Pitch]
    -> MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Pitch
  {- Arity: 2, Strictness: <S,1*U><L,1*U(U,U)>m -}
d479d523c3b0c140debae263ab7e2151
  invertr :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (scale :: MusiCompoNator.Core.Scale) ->
                 case scale of wild {
                   []
                   -> case GHC.List.scanl2
                      ret_ty [GHC.Real.Ratio GHC.Integer.Type.Integer]
                      of {}
                   : ds1 xs
                   -> GHC.Base.++
                        @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                        xs
                        (GHC.Types.:
                           @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                           (case ds1 of ww3 { GHC.Real.:% ww4 ww5 ->
                            case GHC.Real.$w$s$c+
                                   MusiCompoNator.Core.down_dt
                                   GHC.Real.$fEnumRatio1
                                   ww4
                                   ww5 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } })
                           (GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer))) }) -}
246575cd4a91014647ee2024ed98ac64
  ionian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,U(U,U)>m2, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Pitch) ->
                 case MusiCompoNator.Core.$wionian w of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 }) -}
3cfd8c310a15f386f67247a2f22a03bf
  iv :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.iv1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
f45bd1a687cb9314512e38a1188a5470
  iv' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiv' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
5651814027b939fb141618ec3507cd61
  iv'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiv'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
c97d3d52cdce1806c92b1378ab096d24
  iv1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
45cd6a07758aa908010861001855d05a
  iv_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiv_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
8a494db51645e35dd01a93dc2c6c72ec
  iv__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiv__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
76803f47d2c0bee8c83dcf565fa71c36
  ix :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.ix1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
fa9c4c92ee290d3b04a470ecd7bbe96d
  ix' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wix' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
d645216b19157c1baabc8d80ca19d020
  ix'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wix'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
9031bcf7630899835d3d008864d8501e
  ix1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
e940241dcc08311606787e6217746de7
  ix_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wix_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
7e3701051d425e4f0ef9770ef0a9f368
  ix__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wix__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
493a1c3abf1fd44401e4bb4e8d23a3f4
  locrian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   7#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.aeolian1
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
64c6e260f7981990fb0316d795450a2f
  lydian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   4#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.aeolian3
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
b217c4a04e054b5ace7101f0bdc270de
  mixolydian ::
    MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   5#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.aeolian2
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
7a4810397669c0da6c38639a4873c460
  phrygian :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Scale
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: (\ (q :: MusiCompoNator.Core.Pitch) ->
                 MusiCompoNator.Core.$wstep
                   3#
                   (case MusiCompoNator.Core.$wionian
                           (case q of ww { GHC.Real.:% ww1 ww2 ->
                            case GHC.Real.$w$s$c-
                                   ww1
                                   ww2
                                   MusiCompoNator.Core.aeolian4
                                   GHC.Real.$fEnumRatio1 of ww6 { (#,#) ww7 ww8 ->
                            GHC.Real.:%
                              @ GHC.Integer.Type.Integer
                              ww7
                              ww8 } }) of ww { (#,#) ww1 ww2 ->
                    GHC.Types.: @ MusiCompoNator.Core.Pitch ww1 ww2 })) -}
8720d8539a3805dbd5efb4b84e608bb6
  qn :: MusiCompoNator.Core.Beat
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.en2
                        MusiCompoNator.Core.aeolian4 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
e65bb256e1469b70680de263a91838e3
  qns ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1, Strictness: <L,1*U(U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 MusiCompoNator.Core.Measure
                   @ MusiCompoNator.Core.Beat
                   (case w of wild1 { GHC.Types.I# y ->
                    case GHC.Prim.<# 0# y of lwild {
                      DEFAULT -> GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      1# -> MusiCompoNator.Core.$wxs2 y } })) -}
1a0865bce86462958974951d429a7ca9
  root :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                (GHC.List.head @ MusiCompoNator.Core.Pitch) -}
8ff8534d2493f19f0e41deb632c67bc0
  sharp :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: GHC.Real.Ratio GHC.Integer.Type.Integer) ->
                 case w1 of ww3 { GHC.Real.:% ww4 ww5 ->
                 case GHC.Real.$w$s$c+
                        MusiCompoNator.Core.en2
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 of ww6 { (#,#) ww7 ww8 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } }) -}
c184a4be48a4dcb1f30812d170483428
  sn :: MusiCompoNator.Core.Beat
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.en2
                        MusiCompoNator.Core.sn1 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
f22ff2e2ce800d191aefbb8317f3b7b3
  sn1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (16) -}
c7386e4994d494bbb1285a1b549b96e1
  sns ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1, Strictness: <L,1*U(U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 MusiCompoNator.Core.Measure
                   @ MusiCompoNator.Core.Beat
                   (case w of wild1 { GHC.Types.I# y ->
                    case GHC.Prim.<# 0# y of lwild {
                      DEFAULT -> GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      1# -> MusiCompoNator.Core.$wxs3 y } })) -}
a8e7fd36a18e39bf8dea66a5b6116d35
  step ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Scale
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><L,U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: MusiCompoNator.Core.Scale) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MusiCompoNator.Core.$wstep ww1 w1 }) -}
dd05b6472d87542ef6bf6298856c532c
  triplet ::
    MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1,
     Unfolding: (MusiCompoNator.Core.$fFunctorRhythm_$cfmap
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   MusiCompoNator.Core.triplet1) -}
a14a0ede430f5eb2c5d592e6eb4b575c
  triplet1 ::
    GHC.Real.Ratio GHC.Integer.Type.Integer
    -> GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Arity: 1,
     Unfolding: (GHC.Real.$fFractionalRatio_$s$c*
                   MusiCompoNator.Core.triplet2) -}
7519373ecdb95b1ea0283f782051d859
  triplet2 :: GHC.Real.Ratio GHC.Integer.Type.Integer
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.aeolian5
                        MusiCompoNator.Core.dotted3 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
52fad60960bcf87884dc981c347752da
  tuplet ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 2, Strictness: <L,1*U><L,U>,
     Unfolding: (\ (n :: GHC.Integer.Type.Integer)
                   (d1 :: GHC.Integer.Type.Integer) ->
                 MusiCompoNator.Core.$fFunctorRhythm_$cfmap
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                   (let {
                      w :: GHC.Real.Ratio GHC.Integer.Type.Integer
                      = case GHC.Real.$w$s$cfromRational n d1 of ww { (#,#) ww1 ww2 ->
                        GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }
                    } in
                    \ (w1 :: GHC.Real.Ratio GHC.Integer.Type.Integer) ->
                    case w of ww { GHC.Real.:% ww1 ww2 ->
                    case w1 of ww3 { GHC.Real.:% ww4 ww5 ->
                    case GHC.Real.$w$sreduce
                           (GHC.Integer.Type.timesInteger ww1 ww4)
                           (GHC.Integer.Type.timesInteger ww2 ww5) of ww6 { (#,#) ww7 ww8 ->
                    GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } } })) -}
4810e20bb5d07fc56993eecd0e0e59e2
  up :: MusiCompoNator.Core.Pitch -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: GHC.Real.Ratio GHC.Integer.Type.Integer) ->
                 case w1 of ww3 { GHC.Real.:% ww4 ww5 ->
                 case GHC.Real.$w$s$c+
                        MusiCompoNator.Core.down_dt
                        GHC.Real.$fEnumRatio1
                        ww4
                        ww5 of ww6 { (#,#) ww7 ww8 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww7 ww8 } }) -}
36a4a90fd66fc1138f3fb9422173117a
  v :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.v1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
3aad60255b348f4f7e6bd49ac377ed26
  v' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wv' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
449257952605b6d67bd8853c0beb9e45
  v'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wv'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
44f528793884d91bf798df05dd673c65
  v1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
a094a982872cb451a4a3eda4e77f5970
  v_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wv_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
a151289622919d1c07ac8f114e5c173c
  v__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wv__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
73495fc3f69e0590bdd9824f0ae325d1
  vi :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.vi1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
b88affeecccb341ceb8d12bebc687734
  vi' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvi' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
5ead156d9c3570f5acfe23110f5cde32
  vi'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvi'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
eadb0e53fc7685f77973790fae424de8
  vi1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
510ef1435adffe43f099adabcc975f8a
  vi_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvi_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
3cccda5c765adff662cf3f53ae603cc5
  vi__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvi__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4516baf9cf62a0e4a7d72a3fa9466aa7
  vii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.vii1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
e606a1f216fb0b507153387d8347fa05
  vii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
ad9c01cfbd98a8bf01742e0246057cce
  vii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
540a0bcba20cc463fb081d4dce3919c5
  vii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
ad04a5f88c407cc26c511cedc9fa9609
  vii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
61ba17ebaf961789df12bd9ef1a5e0ac
  vii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wvii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
49f054c7ec4bd722df0e0d3a060b23d4
  viii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step
                        MusiCompoNator.Core.viii1
                        x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
7308be409376b044dd6eb31de056da0f
  viii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
31ae81660c4f8632b92ea1e8b96e36d1
  viii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
647b356d86c96f6b0f2d818138627eae
  viii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
0bae2a12d5b187a80c2ba26a2b65f299
  viii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wviii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
bea5f33a1d0186e638dee58c8040a0b4
  viii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wiix__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
373809421a944c8c8e7846b2af9daf42
  wn :: MusiCompoNator.Core.Beat
  {- Unfolding: (case GHC.Real.$w$s$cfromRational
                        MusiCompoNator.Core.en2
                        MusiCompoNator.Core.en2 of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
58ddec0a0af5751bbbefb1f31a2ffabc
  wns ::
    GHC.Types.Int
    -> MusiCompoNator.Core.Rhythm MusiCompoNator.Core.Beat
  {- Arity: 1, Strictness: <L,1*U(U)>m1, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 MusiCompoNator.Core.Measure
                   @ MusiCompoNator.Core.Beat
                   (case w of wild1 { GHC.Types.I# y ->
                    case GHC.Prim.<# 0# y of lwild {
                      DEFAULT -> GHC.Types.[] @ (GHC.Real.Ratio GHC.Integer.Type.Integer)
                      1# -> MusiCompoNator.Core.$wxs4 y } })) -}
08f6055858918683e153ac4b4dcd32d7
  x :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.x1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
ffddaf8971b944aff55a30bb1e0699ea
  x' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wx' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
646962944012a23d6f645b9cb13f7f26
  x'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wx'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
a96d6979a7282f6d2fa04f7bba0a317c
  x1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10#) -}
44385c816806cf755f3ce3812d79ab84
  x_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wx_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
bf6be48600b20ab34087cc02f2d4a244
  x__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wx__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
065ee2cb862825a2dcb50d52bfb7e1aa
  xi :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.xi1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
4e8d095e9a52968c5e3477d4db09f166
  xi' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxi' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
c8868e23514d52b412abb187f88cc438
  xi'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxi'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
fde3ae1c2b6b383d77490f5f48de0916
  xi1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
cbd58bdc456ac7f642d33e1f501f51c0
  xi_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxi_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
94d32d20a30fc9e32da6057b2aa596d2
  xi__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxi__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
5f13e6732cf61b32ed0137cbba0a7350
  xii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step MusiCompoNator.Core.xii1 x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
7223cd067822c9b7c7ba2661c0a4e604
  xii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
f6cc330ab64056f39a018025df7ba8c5
  xii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4f0dfbe71108fe9828719033833df246
  xii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12#) -}
51ee525ffb905191e5977645b6cdb704
  xii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
78cdac5e1734f457cabbb92ab50379fe
  xii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
6abe859a31b978855afaa2e3593f2a7b
  xiii :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x2 :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.step
                        MusiCompoNator.Core.xiii1
                        x2 of wild {
                   [] -> GHC.List.badHead @ MusiCompoNator.Core.Pitch
                   : x3 ds1 -> x3 }) -}
1fc1de4234b5f3846603ea6b079d5ae6
  xiii' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxiii' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
4de3892f2b802bac131decd736ac9200
  xiii'' :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxiii'' w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
d359af18c75d6dabf5ce0a7dddcb9d4c
  xiii1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
ee7cf12f6e137801ec8d4e8ebe387459
  xiii_ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxiii_ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
01f1f7ccc2db60f95e10805edaa1879e
  xiii__ :: MusiCompoNator.Core.Scale -> MusiCompoNator.Core.Pitch
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: MusiCompoNator.Core.Scale) ->
                 case MusiCompoNator.Core.$wxiii__ w of ww { (#,#) ww1 ww2 ->
                 GHC.Real.:% @ GHC.Integer.Type.Integer ww1 ww2 }) -}
instance [safe] Data.Foldable.Foldable [MusiCompoNator.Core.Simultanity]
  = MusiCompoNator.Core.$fFoldableSimultanity
instance [safe] GHC.Base.Functor [MusiCompoNator.Core.Rhythm]
  = MusiCompoNator.Core.$fFunctorRhythm
instance [safe] GHC.Base.Functor [MusiCompoNator.Core.Simultanity]
  = MusiCompoNator.Core.$fFunctorSimultanity
instance [safe] MusiCompoNator.Core.Measurable [MusiCompoNator.Core.Rhythm]
  = MusiCompoNator.Core.$fMeasurableRhythm
instance [safe] GHC.Base.Monoid [MusiCompoNator.Core.Simultanity]
  = MusiCompoNator.Core.$fMonoidSimultanity
instance [safe] GHC.Base.Semigroup [MusiCompoNator.Core.Rhythm]
  = MusiCompoNator.Core.$fSemigroupRhythm
instance [safe] GHC.Base.Semigroup [MusiCompoNator.Core.Signature]
  = MusiCompoNator.Core.$fSemigroupSignature
instance [safe] GHC.Base.Semigroup [MusiCompoNator.Core.Simultanity]
  = MusiCompoNator.Core.$fSemigroupSimultanity
instance [safe] GHC.Show.Show [MusiCompoNator.Core.Rhythm]
  = MusiCompoNator.Core.$fShowRhythm
instance [safe] GHC.Show.Show [MusiCompoNator.Core.Signature]
  = MusiCompoNator.Core.$fShowSignature
instance [safe] GHC.Show.Show [MusiCompoNator.Core.Simultanity]
  = MusiCompoNator.Core.$fShowSimultanity
"SPEC $cfoldMap @ Any _" forall @ a2
                                ($dMonoid :: GHC.Base.Monoid Data.Semigroup.Internal.Any)
  MusiCompoNator.Core.$fFoldableSimultanity_$cfoldMap @ Data.Semigroup.Internal.Any
                                                      @ a2
                                                      $dMonoid
  = MusiCompoNator.Core.$fFoldableSimultanity_$s$cfoldMap @ a2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

